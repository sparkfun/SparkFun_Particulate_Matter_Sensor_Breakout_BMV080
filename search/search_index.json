{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"],"fields":{"title":{"boost":1000.0},"text":{"boost":1.0},"tags":{"boost":1000000.0}}},"docs":[{"location":"","title":"Home","text":"<p>Placeholder file for index redirect functionality.</p>"},{"location":"ex1_basic_readings/","title":"1 &mdash; Basic Readings","text":"<p>This example shows how to read the BMV080 via Qwiic when the sensor is configured in continuous mode. The output will show the amount of particulate matter that is detected.</p> <p>Head to the example 1 from the Arduino IDE's menu (located in File Examples &gt; SparkFun BMV080 Arduino Library &gt; Example_01_BasicReadings).</p> <p>If you have not already, select your Board (in this case the SparkFun ESP32 IoT RedBoard), and associated COM port. Upload the code to the board and set the Arduino Serial Monitor to 115200 baud. The Arduino should begin outputting the sensor readings. If the air in front of the sensor is void of particulate matter, you should see <code>0.00</code> for each size.</p> <p>Try placing a scented candle or spray some air freshener across the sensor. You should see the sensor readings jump up depending on the PM size.</p> <p>When the sensor detects an object in front of the it, the output will indicate that the sensor is <code>obstructed</code>.\"</p>"},{"location":"ex2_duty_cycle/","title":"2 &mdash; Duty Cycle","text":"<p>This example shows how to read the BMV080 via Qwiic when the sensor is configured in duty cycle mode. Similar to the first example, the output will show the amount of particulate matter that is detected. However, it will show the readings every 20 seconds.</p> <p>Head to the example 2 from the Arduino IDE's menu (located in File Examples &gt; SparkFun BMV080 Arduino Library &gt; Example_02_DutyCycle).</p> <p>If you have not already, select your Board (in this case the SparkFun ESP32 IoT RedBoard), and associated COM port. Upload the code to the board and set the Arduino Serial Monitor to 115200 baud. The Arduino should begin outputting the sensor readings every 20 seconds.</p>"},{"location":"ex3_interrupt/","title":"3 &mdash; Interrupt","text":"<p>Note</p> <p>The interrupt example cannot be used when the BMV080 is in duty cycling mode.</p> <p>This example shows how to read the BMV080 via Qwiic when the sensor is configured in continuous mode with a hardware interrupt. Similar to the first example, the output will show the amount of particulate matter that is detected. However, the sensor will trigger a hardware interrupt.</p> <p>Head to the example 3 from the Arduino IDE's menu (located in File Examples &gt; SparkFun BMV080 Arduino Library &gt; Example_03_Interrupt).</p> <p>If you have not already, select your Board (in this case the SparkFun ESP32 IoT RedBoard), and associated COM port. Upload the code to the board and set the Arduino Serial Monitor to 115200 baud. The Arduino should begin outputting the sensor readings every 20 seconds.</p> <p>Tip</p> <p>You can view the timestamp of each sensor readings in the Arduino Serial Monitor by clicking on the \"Toggle Timestamp\" button. This button is represented as a clock above the baud rate.</p>"},{"location":"ex4_spi/","title":"4 &mdash; SPI","text":"<p>Note</p> <p>Make sure to configure the board for SPI mode by adjusting the jumpers on the back of the board. You will also need to solder headers to the board and wire to your Arduino's SPI port.</p> <p>This example shows how to read the BMV080 via SPI when the sensor is configured to continuous mode.</p> <p>Head to the example 4 from the Arduino IDE's menu (located in File Examples &gt; SparkFun BMV080 Arduino Library &gt; Example_04_SPI).</p> <p>If you have not already, select your Board (in this case the SparkFun ESP32 IoT RedBoard), and associated COM port. Upload the code to the board and set the Arduino Serial Monitor to 115200 baud. The Arduino should begin outputting the sensor readings.</p>"},{"location":"ex5_parameters/","title":"5 &mdash; Parameters","text":"<p>This example shows how to read and set the parameters of the BMV080 via Qwiic. These include <code>volumetric_mass_density</code>, <code>integration_time</code>, <code>distribution_id</code>, <code>do_obstruction_detection</code>, <code>do_vibration_filtering</code>, and  <code>measurement_algorithm</code>. Once these parameters are read and set, this example will then configure the sensor in continuous mode to read particulate mater every second.</p> <p>Head to the example 5 from the Arduino IDE's menu (located in File Examples &gt; SparkFun BMV080 Arduino Library &gt; Example_05_Parameters).</p> <p>If you have not already, select your Board (in this case the SparkFun ESP32 IoT RedBoard), and associated COM port. Upload the code to the board and set the Arduino Serial Monitor to 115200 baud. The Arduino should output the paraemters before outputting the sensor readings every second.</p> <p>Note</p> <p>If you do not see the parameters after uploading, you may not have opened the Arduino Serial Monitor when the Arduino output the parameters. Try restarting your Arduino by hitting the reset button.</p>"},{"location":"ex6_two_sensors/","title":"6 &mdash; Two Sensors","text":"<p>Note</p> <p>Make sure to have one sensor using the alternate I<sup>2</sup>C address. In this case, the second BMV080 had AB0 jumper changed to <code>0</code>.</p> <p>This example shows how to read two BMV080 via Qwiic when each sensor is configured in continuous mode. The output will show the amount of particulate matter that is detected from both sensors.</p> <p>Head to the example 6 from the Arduino IDE's menu (located in File Examples &gt; SparkFun BMV080 Arduino Library &gt; Example_06_TwoSensors).</p> <p>If you have not already, select your Board (in this case the SparkFun ESP32 IoT RedBoard), and associated COM port. Upload the code to the board and set the Arduino Serial Monitor to 115200 baud. The Arduino should begin outputting the sensor readings from both BMV080s.</p>"},{"location":"ex7_alphanumeric/","title":"7 &mdash; Qwiic Alphanumeric Display","text":"<p>This example shows how to read the BMV080 via Qwiic when the sensor is configured in duty cycle mode. The output to the Qwiic Alphanumeric display will show the amount of particulate matter that is detected.</p> <p>Head to the example 7 from the Arduino IDE's menu (located in File Examples &gt; SparkFun BMV080 Arduino Library &gt; Example_07_Demo_Alphanumeric).</p> <p>If you have not already, select your Board (in this case the SparkFun ESP32 IoT RedBoard), and associated COM port. Upload the code to the board and set the Arduino Serial Monitor to 115200 baud. The Arduino should begin outputting the sensor readings through the Arduino Serial Monitor and the Qwiic Alphanumeric display. For simplicity, we will only display PM2.5.</p>"},{"location":"ex8_oled/","title":"8 &mdash; Qwiic OLED (1.3\", 126x64)","text":"<p>This example shows how to read the BMV080 via Qwiic when the sensor is configured in duty cycle mode. The output to the Qwiic OLED Display (specifically the 1.3\", 128x64) will show the amount of particulate matter that is detected.</p> <p>Head to the example 8 from the Arduino IDE's menu (located in File Examples &gt; SparkFun BMV080 Arduino Library &gt; Example_08_Demo_OLED).</p> <p>If you have not already, select your Board (in this case the SparkFun ESP32 IoT RedBoard), and associated COM port. Upload the code to the board and set the Arduino Serial Monitor to 115200 baud. The Arduino should begin outputting the sensor readings through the Arduino Serial Monitor and the Qwiic OLED Display (1.3\", 128x64).</p>"},{"location":"hard_copy/","title":"Hard copy","text":"<p>Need to download or print our hookup guide?</p> <ul> <li>Print  (Single-Page View)<ul> <li>To save as a <code>*.pdf</code> file, select the Printer or Destination labeled Save as PDF. (Instructions will vary based on the browser)</li> </ul> </li> </ul>"},{"location":"hardware_hookup/","title":"Hardware Hookup","text":""},{"location":"hardware_hookup/#connecting-via-qwiic","title":"Connecting via Qwiic","text":"<p>By default, the sensor can be read through I<sup>2</sup>C. Insert a Qwiic cable between the SparkFun Qwiic Air Quality Sensor and your microcontroller. Then connect a compatible USB cable between the microcontroller and your computer's USB port.</p> Qwiic Cable, Air Quality Sensor, ESP32 IoT RedBoard, and USB Cable Connected <p>For users looking to display the current air quality readings in real time without a computer, we recommend getting an additional Qwiic cable and OLED display. The example in this tutorial uses the Qwiic OLED Display (1.3in., 128x64).</p> Qwiic Cables, Air Quality Sensor, Qwiic OLED, ESP32 IoT RedBoard, and USB Cable Connected"},{"location":"hardware_hookup/#removing-the-bmv080-from-the-enclosure","title":"Removing the BMV080 from the enclosure","text":"<p>For users that need to remove the BMV080 when soldering to the PTHs, you will need to remove the board from the enclosure. You may also want to remove sensor from the enclsoure when modifying the jumpers as well to avoid damaging the material when cutting or soldering the jumper pads. This section will go over how to remove the sensor from the enclosure.</p> <pre><code>insert here\n\n\n\nparts spread out on table\n</code></pre> <p>Using a precision flathead with 0.1mm tip, slide the flathead in the slot and under the tab. Rock the precision flathead's handle toward the mounting hole so that the tab pops out.</p> <pre><code>insert here\n\n\n\n\nflathead under tab and popping out the inner shell\n</code></pre> <p>There is a rubber O-ring and lens between enclosure's inner and outer shell. You will want to carefully remove the inner shell holding the BMV080 over a clean, flat surface to avoid losing the small parts.</p> <pre><code>insert here\n\n\n\n\ncarefully removing inner shell showing the o-ring and lens\n</code></pre> <p>Slide the sensor out from the inner shell's slot. At this point, you should be able to solder male header pins from the top side so that you can access the longer mating pins from the bottom side. Depending on your preference, you can also solder jumper wires to the PTHs as well depending on your setup. Carefully clean the solder joints to remove any flux residue left on the board using isopropyl alcohol and a precision Q-tip.</p> <p>Note</p> <p>When soldering make sure to not add too much solder. This may prevent your from being able to slide the breakout board back into the inner shell. For users soldering header pins, ensure that the header's plastic spacer is flush against the breakout board and not at an angle. For users soldering wire, ensure that the stripped wire is short.</p>"},{"location":"hardware_hookup/#reassembling-the-enclosure","title":"Reassembling the Enclosure","text":"<p>Now that we are done modifying the breakout board, it is time to place the sensor back in the enclosure! This section will go over how to reassemble the parts.</p> <pre><code>insert here\n\n\n\n\nsensor back in enclosure\n</code></pre> <p>Slide the BMV080's breakout board into the inner shell so that the sensor aligns with the hole and the Qwiic connector aligns with the slot on the side of the inner shell's enclosure.</p> <pre><code>insert here\n\n\n\n\nslide the BMV080 with headers back into the inner shell\n</code></pre> <p>Turn the board over on a clean, flat surface. Using tweezers, place the lens over the hole where the BMV080's sensor is located. Then place the o-ring over lens. Ensure that the parts are in their respective square and circular slots.</p> <pre><code>insert here\n\n\n\n\ninner shell facing away from table with lens and o-ring placed on top\n</code></pre> <p>With the outer shell, align the hole for the lens and the slot for the Qwiic connector. Slide the outer shell in over the inner shell.</p> <pre><code>insert here\n\n\n\nouter shell over the inner shell\n</code></pre> <p>Push down until you hear the tabs pop in.</p> <pre><code>insert here\n\n\n\npush down on outer shell until the tabs pop in\n</code></pre>"},{"location":"hardware_hookup/#connecting-via-pth","title":"Connecting via PTH","text":"<p>Note</p> <p>When soldering directly to the PTHs, you will need to be careful of the 3D printed enclosure! You will want to carefully remove the board from the enclosure when soldering.</p> <p>For temporary connections to the PTHs, you could use IC hooks to test out the pins. However, you'll need to solder headers or wires of your choice to the board for a secure connection. You can choose between a combination of header pins and jumper wires, or stripping wire and soldering the wire directly to the board.</p> <ul> <li> <p> </p> <p> How to Solder: Through Hole Soldering </p> </li> </ul> <ul> <li> <p> </p> <p> Working with Wire </p> </li> </ul>"},{"location":"hardware_hookup/#interrupt","title":"Interrupt","text":"<p>The following table shows the connection that is required between an ESP32 and the SparkFUn Qwiic Air Quality Sensor when using I<sup>2</sup>C as the communication interface with interrupts.</p> ESP32 Pinout(i.e. IoT RedBoard - ESP32, ESP32 Thing Plus C, etc.)              SparkFun Qwiic Air Quality SensorBMV080              GND GND 3.3V 3V3 SDA SDA (PICO) SCL SCL (SCK) 14 IRQ"},{"location":"hardware_hookup/#spi","title":"SPI","text":"<p>The following tables shows the connection that is required between between an ESP32 and the SparkFun Qwiic Air Quality Sensor when using SPI as the communication interface. You will need to cut the MODE jumper between the center pad and the pad labeled as I2C. Then add solder between the center pad and the pad labeled as SPI. Make sure to also leave the AB0 jumper open (i.e. both sides of the jumper are not connected).</p> ESP32 Pinout(i.e. IoT RedBoard - ESP32, ESP32 Thing Plus C, etc.)              SparkFun Qwiic Air Quality SensorBMV080              GND GND 3.3V 3V3 PICO PICO (SDA) POCI POCI (AB0) SCK SCK (SCL) CS CS (AB1)"},{"location":"hardware_overview/","title":"Hardware Overview","text":"<p>In this section, we will highlight the hardware and pins that are broken out on the SparkFun Qwiic Air Quality PM1/PM2.5/PM10 Sensor - BMV080. For more information, check out our Resources and Going Further on the components used for the sensor.</p> Top View Bottom View"},{"location":"hardware_overview/#bmv080","title":"BMV080","text":"<p>The breakout board comes with Bosch's BMV080 populated and takes advantage of its flexible cable with the FPC 13-pin 0.33mm connector. The sensor is an ultra-small, fan-less air quality sensor for sensing PM1, PM2.5, and PM10 concentrations. A special lens allows the laser to pass through the enclosure to take measurements.</p> BMV080 <p>Note</p> <p>This is a CLASS 1 LASER PRODUCT CLASSIFIED IEC 60825-1 2014.</p>"},{"location":"hardware_overview/#power","title":"Power","text":"<p>To power the board, you will need 3.3V. You can connect a Qwiic cable to the Qwiic connector. Or you could solder directly to the PTHs. Below are the power pins that are broken out on the edge of the board.</p> <ul> <li>3V3 \u2014 This pin is the voltage input for the board. The recommended input voltage for this pin is 3.3V.</li> <li>GND \u2014 Of course, is the common, ground voltage (0V reference) for the system.</li> </ul> Power and Ground Highlighted - Top View Power, Ground, and Qwiic Connector Highlighted - Bottom View"},{"location":"hardware_overview/#qwiic-and-i2c","title":"Qwiic and I<sup>2</sup>C","text":"<p>By default, the communication interface is set to I<sup>2</sup>C with the MODE jumper. The board includes one horizontal Qwiic connector to connect to other Qwiic-enabled I<sup>2</sup>C devices. However, the board still breaks out 0.1\"-spaced pins for users who prefer a soldered connection.</p> <ul> <li>SCL/SCK \u2014 On the top side, the pin is labeled as SCL. On the bottom side, the pin is labeled as SCK. Thus the pin is used for the I<sup>2</sup>C clock.</li> <li>SDA/PICO \u2014 On the top side, the pin is labeled as SDA. On the bottom side, the pin is labeled as PICO. Thus the pin is used for the I<sup>2</sup>C data.</li> </ul> Qwiic Connector and I<sup>2</sup>C Highlighted - Top View I<sup>2</sup>C Highlighted - Bottom View <p>The default address of the BMV080 is set to 0x57 by default. By configuring AB1 and AB0 jumpers, you can adjust the I<sup>2</sup>C address to an alternative address. For more information, check below under the jumpers.</p>"},{"location":"hardware_overview/#interrupt-pin","title":"Interrupt Pin","text":"<p>The board includes an interrupt pin when the board is set to I<sup>2</sup>C mode.</p> <ul> <li>IRQ \u2014 Short for interrupt. This pin sends an interrupt signal to a microcontroller.</li> </ul> Interrupt Pin Highlighted - Top View Interrupt Pin Highlighted - Bottom View <p>Note</p> <p>The hardware interrupt of the BMV080 sensor unit cannot be used as trigger in duty cycling mode.</p>"},{"location":"hardware_overview/#spi","title":"SPI","text":"<p>The BMV080 can also be set to SPI as the communication interface by adjusting the MODE jumper on the back.</p> <ul> <li>PICO/SDA \u2014 On the bottom side, the pin is labeled as PICO (i.e. Peripheral In, Controller Out). On the top side, the pin is labeled as SDA.</li> <li>POCI/AB0 \u2014 On the bottom side, the pin is labeled as POCI (i.e. Peripheral Out, Controller In). On the top side, the pin is labeled as AB0. When set to SPI mode, make sure to leave AB0 (POCI) open!</li> <li>SCK/SCL \u2014 On the bottom side, the pin is labeled as SCK for the clock. On the tip side, the pin is labeled as SCL.</li> <li>CS \u2014 On the bottom side, the pin is labeled as CS (i.e. chip select). On the top side, the pin is labeled as AB1. This pin is active low. When set to SPI mode, make sure to leave AB1 (CS) open!</li> </ul> SPI Pins Highlighted - Top View SPI Pins Highlighted - Bottom View"},{"location":"hardware_overview/#jumpers","title":"Jumpers","text":"<p>Note</p> <p>If this is your first time working with jumpers, check out the How to Work with Jumper Pads and PCB Traces tutorial for more information.</p> <p>The back of the board includes jumpers to configure the board.</p> <ul> <li>I<sup>2</sup>C \u2014 By default, this three-pad jumper is closed. The three way jumper labeled I<sup>2</sup>C connects 3.3V to two 2.2k\u03a9 pull-up resistors and to the I<sup>2</sup>C data and clock lines. If multiple devices are connected to the bus with the pull-up resistors enabled, the parallel equivalent resistance will create too strong of a pull-up for the bus to operate correctly. As a general rule of thumb, disable all but one pair of pull-up resistors if multiple devices are connected to the bus.</li> <li>AB0 \u2014 Address jumper 0 when the BMV080 is set to I<sup>2</sup>C mode. This is a multifunctional pin. This is also connected to POCI. By default, the three-pad jumper's center pad is connected to the <code>1</code> side</li> <li>AB1 \u2014 Address jumper 1 when the BMV080 is set to I<sup>2</sup>C mode. This is a multifunctional pin. This is also connected to CS. By default, the three-pad jumper's center pad is connected to the <code>1</code> side</li> <li>MODE \u2014 By default, this three-pad jumper is closed between the center pad and the pad labeled as I2C. Thus, the communication interface is set to I<sup>2</sup>C. Cutting this trace and adding solder between the center pad and the pad labeled as SPI will configure the communication interface as SPI.</li> </ul> Jumpers Highlighted - Bottom View <p>When the SparkFun Qwiic Air Quality Sensor is configured in I2C mode, users have the ability to configure the default address using AB0 and AB1 jumpers. The following table shows the possible I<sup>2</sup>C address based on the jumper configuration.</p> AB1              AB0              I<sup>2</sup>C Address              0              0              0x54              0              1              0x55              1              0              0x56              1              1              0x57 (default) <p>Note</p> <p>AB0 is a multifunctional pin! When the SparkFun Qwiic Air Quality Sensor is configured for SPI, make sure to leave AB0 (POCI) open!</p>"},{"location":"hardware_overview/#3d-model","title":"3D Model","text":"<p>A 3D model of the board and components was exported to a STEP file using KiCad.</p> <p> </p> Click Here for the STEP File"},{"location":"hardware_overview/#board-dimensions","title":"Board Dimensions","text":"<p>The board is 0.5\" x 0.95\" (12.70mm x 24.13mm). To make the board as small as possible, there are no mounting holes.</p> Board Dimensions"},{"location":"introduction/","title":"Introduction","text":"<p>The SparkFun Qwiic Air Quality PM1/PM2.5/PM10 Sensor - BMV080 is an ultra-small, fan-less air quality sensor for sensing PM1 and PM2.5 particulate matter! Within the enclosure is a breakout board that breaks out Bosch's BMV080, the world's smallest PM1 and PM2.5 air quality sensor. The sensing element measures merely 4.2mm x 3.5mm x 3.1mm (W x L x H), which is more than 450 times smaller than any comparable device on the market. The innovative design is based on ultra-compact lasers with integrated photodiodes. The sensor applies sophisticated algorithms to measure PM1 and PM2.5 concentrations directly in free space, without requiring an intrusive fan. </p> <ul> <li> <p> </p> <p> SparkFun Qwiic Air Quality PM1/PM2.5/PM10 Sensor - BMV080    SEN-26554    Purchase from SparkFun  </p> </li> </ul> <p>In this tutorial, we'll go over the hardware and how to hookup the sensor to an Arduino. We will also go over examples from the Arduino Library to get started.</p>"},{"location":"introduction/#required-materials","title":"Required Materials","text":"<p>To follow along with this tutorial, you will need the following materials. You may not need everything though depending on what you have. Add it to your cart, read through the guide, and adjust the cart as necessary.</p> <ul> <li> <p> </p> <p> USB 3.1 Cable A to C - 3 Foot    CAB-14743 </p> </li> </ul> <ul> <li> <p> </p> <p> SparkFun IoT RedBoard - ESP32 Development Board    WRL-19177 </p> </li> </ul> <ul> <li> <p> </p> <p> SparkFun Qwiic Air Quality PM1/PM2.5/PM10 Sensor - BMV080    SEN-26554 </p> </li> </ul> <ul> <li> <p> </p> <p> Flexible Qwiic Cable - 200mm    PRT-17258 </p> </li> </ul>"},{"location":"introduction/#other-microcontrollers","title":"Other Microcontrollers","text":"<p>We recommend using any board with an ESP32 (such as the ESP32-WROOM, ESP32-S2, and ESP32-S3). We'll be using the RedBoard IoT RedBoard - ESP32 Development Board for the examples in this tutorial.</p> <ul> <li> <p> </p> <p> SparkFun IoT RedBoard - ESP32 Development Board    WRL-19177 </p> </li> </ul> <ul> <li> <p> </p> <p> SparkFun Thing Plus - ESP32 WROOM (USB-C)    WRL-20168 </p> </li> </ul> <ul> <li> <p> </p> <p> SparkFun Thing Plus - ESP32-S2 WROOM    WRL-17743 </p> </li> </ul> <ul> <li> <p> </p> <p> SparkFun Thing Plus - ESP32-S3    WRL-24408 </p> </li> </ul>"},{"location":"introduction/#qwiic-accessories","title":"Qwiic Accessories","text":"<p>For those that want to take advantage of the Qwiic connector, you'll want to grab a Qwiic cable. Besides the one listed earlier, there are a variety of other cable lengths available in the SparkFun catalog to choose from.</p> <ul> <li> <p> </p> <p> SparkFun Qwiic Cable Kit    KIT-15081 </p> </li> </ul> <ul> <li> <p> </p> <p> Qwiic Cable - 100mm    PRT-14427 </p> </li> </ul> <ul> <li> <p> </p> <p> Qwiic Cable - 500mm    PRT-14429 </p> </li> </ul> <ul> <li> <p> </p> <p> Qwiic Cable - Breadboard Jumper (4-pin)    PRT-14425 </p> </li> </ul> <p>You'll also want a Qwiic MultiPort when daisy chaining more than one BMV080 or adding additional Qwiic-enabled devices. Adding displays will allow you to view the amount of particulate mater in the air.</p> <ul> <li> <p> </p> <p> SparkFun Qwiic MultiPort    BOB-18012 </p> </li> </ul> <ul> <li> <p> </p> <p> SparkFun Qwiic Alphanumeric Display - Red    COM-16916 </p> </li> </ul> <ul> <li> <p> </p> <p> SparkFun Qwiic OLED - (1.3in., 128x64)    LCD-23453 </p> </li> </ul>"},{"location":"introduction/#tools-optional","title":"Tools (Optional)","text":"<p>Note</p> <p>When soldering directly to the PTHs, you will need to be careful of the 3D printed enclosure! You will want to carefully remove the board from the enclosure before soldering.</p> <p>You will need a soldering iron, solder, and general soldering accessories for a secure connection when using the plated through holes.</p> <ul> <li> <p> </p> <p> Soldering Iron - 60W (Adjustable Temperature)    TOL-14456 </p> </li> </ul> <ul> <li> <p> </p> <p> Solder Lead Free - 15-gram Tube    TOL-09163 </p> </li> </ul> <ul> <li> <p> </p> <p> Hook-Up Wire - Assortment (Stranded, 22 AWG)    PRT-11375 </p> </li> </ul> <ul> <li> <p> </p> <p> Wire Strippers - 30AWG (Hakko)    TOL-12630 </p> </li> </ul> <ul> <li> <p> </p> <p> Flush Cutters - Hakko    TOL-11952 </p> </li> </ul> <ul> <li> <p> </p> <p> Hobby Knife    TOL-09200 </p> </li> </ul> <p>For users that are using the BMV080 in SPI mode or mounting the enclosure, make sure to grab the iFixit Moray Driver Kit. A precision flathead with 0.1mm tip is needed to remove the sensor from the enclosure. We also recommend using Phillips screwdriver with #0 tip and 4-40 standoffs when mounting the enclosure.</p> <ul> <li> <p> </p> <p> iFixit Moray Driver Kit    TOL-14456 </p> </li> </ul> <ul> <li> <p> </p> <p> Standoff - Nylon (4-40; 3/8\"; 10 pack)    TOL-14456 </p> </li> </ul> <ul> <li> <p> </p> <p> Screw - Phillips Head (1/4\", 4-40, 10 pack)    PRT-14456 </p> </li> </ul>"},{"location":"introduction/#prototyping-accessories-optional","title":"Prototyping Accessories (Optional)","text":"<p>Note</p> <p>Due to the size of the 3D printed enclosure, you will not be able to place the sensor on a breadboard. We recommend using M/F jumper wires should you decide to solder male header pins on the sensor. Of course, when soldering the sensor to a protoboard, you could solder to the other side of the protoboard to access the pins.</p> <p>Depending on your setup, you may want to use IC hooks for a temporary connection when the sensor is removed from enclosure. However, you will want to solder header pins to connect devices to the plated through holes for a secure connection. We opted for straight male headers for the SparkFun Qwiic Air Quality PM1/PM2.5/PM10 Sensor - BMV080 as well as M/F jumpers to connect to the RedBoard IoT Development Board to reduce the amount of soldering.</p> <ul> <li> <p> </p> <p> IC Hook with Pigtail    CAB-09741 </p> </li> </ul> <ul> <li> <p> </p> <p> Break Away Headers - Straight    PRT-00116 </p> </li> </ul> <ul> <li> <p> </p> <p> Jumper Wires Premium 6\" M/F Pack of 10    PRT-09140 </p> </li> </ul>"},{"location":"introduction/#suggested-reading","title":"Suggested Reading","text":"<p>If you aren't familiar with the Qwiic Connection System, we recommend reading here for an overview.</p> Qwiic Connection System <p>If you aren\u2019t familiar with the following concepts, we also recommend checking out a few of these tutorials before continuing.</p> <ul> <li> <p> </p> <p> Installing Arduino IDE </p> </li> </ul> <ul> <li> <p> </p> <p> Installing Board Definitions in the Arduino IDE </p> </li> </ul> <ul> <li> <p> </p> <p> IoT RedBoard ESP32 Development Board Hookup Guide </p> </li> </ul> <ul> <li> <p> </p> <p> How to Install CH340 Drivers </p> </li> </ul> <ul> <li> <p> </p> <p> I2C </p> </li> </ul> <ul> <li> <p> </p> <p> Serial Peripheral Interface (SPI) </p> </li> </ul> <ul> <li> <p> </p> <p> Logic Levels </p> </li> </ul>"},{"location":"quickstart/","title":"Quickstart Guide","text":"<p>Below are the instructions to quickly get started Qwiic Air Quality Sensor with an Arduino! For more in depth information about the sensor and examples, make sure to check out the rest of the tutorial!</p> <p>1.) Connect a Qwiic cable between the Qwiic Air Quality Sensor and the SparkFun IoT RedBoard - ESP32.</p> Qwiic Air Quality Sensor Connected to SparkFun IoT RedBoard - ESP32 <p>2.) Connect a USB cable between your computer and the SparkFun IoT RedBoard.</p> USB Cable to SparkFun IoT RedBoard <p>3.) Select the board definition (in this case, it was SparkFun ESP32 IoT RedBoard).</p> Select Board Definition from Arduino IDE <p>4.) Select the COM port (in this case, it was COM13).</p> Select COM Port from Arduino IDE <p>5.) In the Arduino Library Manager, search for the \"SparkFun BMV080\" to  install the SparkFun BMV080 Arduino Library.</p> Install Arduino Library <p>6.) Open example 1 through the Arduino IDE's menu: File &gt; Examples &gt; SparkFun BMV080 Arduino Library &gt; Example_01_BasicReadings.</p> Open Example 1 <p>7.) Upload example code.</p> Upload example code <p>8.) Open Arduino Serial Monitor at 115200 to begin detecting particulate matter!</p> BMV080 Arduino Output"},{"location":"resources/","title":"Resources","text":"<p>Now that you've successfully got your SparkFun Qwiic Mini Particulate Matter Sensor Breakout - BMV080 up and running, it's time to incorporate it into your own project! For more information, check out the resources below:</p> <ul> <li>Schematic (PDF)</li> <li>KiCad Files (ZIP)</li> <li>Board Dimensions (PNG)</li> <li>3D Model<ul> <li>Breakout Board (STEP)</li> <li>[Enclosure](</li> </ul> </li> <li>Component Datasheets<ul> <li>[BMV080](</li> </ul> </li> <li>Arduino Library<ul> <li>SparkFun BMV080</li> <li>SparkFun Toolkit</li> </ul> </li> <li>GitHub Hardware Repo</li> </ul>"},{"location":"setting_up_arduino/","title":"Setting Up Arduino","text":"<p>Arduino</p> <p>This example assumes you are using the latest version of the Arduino IDE on your desktop. If this is your first time using Arduino IDE, library, or board add-on, please review the following tutorials.</p> <ul> <li>Installing the Arduino IDE</li> <li>Installing an Arduino Library</li> <li>Installing Board Definitions in the Arduino IDE</li> </ul> <p>Note</p> <p>If you've never connected an CH340 device to your computer before, you may need to install drivers for the USB-to-serial converter. Check out our section on \"How to Install CH340 Drivers\" for help with the installation.</p> <ul> <li>How to Install CH340 Drivers</li> </ul> <p>SparkFun has written a library using Bosch's API to work with the BMV080! You can obtain this library through the Arduino Library Manager by searching for \"SparkFun BMV080\". Find the one written by SparkFun Electronics and install the latest version. Users who prefer to manually install the library can get it from the GitHub Repository or download the .ZIP by clicking the button below:</p> SparkFun BMV080 Arduino Library (ZIP) <p>Note</p> <p>The SparkFun BMV080 Arduino Library uses the SparkFun Toolkit as a dependency. This should automatically download when installing the library using the Arduino Library Manager. For users that are installing the BMV080 library manually, make sure to download the SparkFun Toolkit as well. At the time of writing, we were using the following Arduino Libraries, firmware binaries, board add-ons.</p> <ul> <li>Arduino Libraries<ul> <li>SparkFun BMV080 Arduino Library v???</li> <li>SparkFun Toolkit v???</li> </ul> </li> <li>Board Definitions<ul> <li>esp32 by Espressif v3.0.1 for the IoT RedBoard - ESP32.</li> </ul> </li> </ul> <p>Now that we have our library and board add-on installed, we can start experimenting with the breakout board. For the scope of this tutorial, we will highlight the examples to get started. From there we will be able to build our own custom code to integrate the development board into a project.</p>"},{"location":"single_page/","title":"Quickstart Guide","text":"<p>Below are the instructions to quickly get started Qwiic Air Quality Sensor with an Arduino! For more in depth information about the sensor and examples, make sure to check out the rest of the tutorial!</p> <p>1.) Connect a Qwiic cable between the Qwiic Air Quality Sensor and the SparkFun IoT RedBoard - ESP32.</p> Qwiic Air Quality Sensor Connected to SparkFun IoT RedBoard - ESP32 <p>2.) Connect a USB cable between your computer and the SparkFun IoT RedBoard.</p> USB Cable to SparkFun IoT RedBoard <p>3.) Select the board definition (in this case, it was SparkFun ESP32 IoT RedBoard).</p> Select Board Definition from Arduino IDE <p>4.) Select the COM port (in this case, it was COM13).</p> Select COM Port from Arduino IDE <p>5.) In the Arduino Library Manager, search for the \"SparkFun BMV080\" to  install the SparkFun BMV080 Arduino Library.</p> Install Arduino Library <p>6.) Open example 1 through the Arduino IDE's menu: File &gt; Examples &gt; SparkFun BMV080 Arduino Library &gt; Example_01_BasicReadings.</p> Open Example 1 <p>7.) Upload example code.</p> Upload example code <p>8.) Open Arduino Serial Monitor at 115200 to begin detecting particulate matter!</p> BMV080 Arduino Output"},{"location":"single_page/#introduction","title":"Introduction","text":"<p>The SparkFun Qwiic Air Quality PM1/PM2.5/PM10 Sensor - BMV080 is an ultra-small, fan-less air quality sensor for sensing PM1 and PM2.5 particulate matter! Within the enclosure is a breakout board that breaks out Bosch's BMV080, the world's smallest PM1 and PM2.5 air quality sensor. The sensing element measures merely 4.2mm x 3.5mm x 3.1mm (W x L x H), which is more than 450 times smaller than any comparable device on the market. The innovative design is based on ultra-compact lasers with integrated photodiodes. The sensor applies sophisticated algorithms to measure PM1 and PM2.5 concentrations directly in free space, without requiring an intrusive fan. </p> <ul> <li> <p> </p> <p> SparkFun Qwiic Air Quality PM1/PM2.5/PM10 Sensor - BMV080    SEN-26554    Purchase from SparkFun  </p> </li> </ul> <p>In this tutorial, we'll go over the hardware and how to hookup the sensor to an Arduino. We will also go over examples from the Arduino Library to get started.</p>"},{"location":"single_page/#required-materials","title":"Required Materials","text":"<p>To follow along with this tutorial, you will need the following materials. You may not need everything though depending on what you have. Add it to your cart, read through the guide, and adjust the cart as necessary.</p> <ul> <li> <p> </p> <p> USB 3.1 Cable A to C - 3 Foot    CAB-14743 </p> </li> </ul> <ul> <li> <p> </p> <p> SparkFun IoT RedBoard - ESP32 Development Board    WRL-19177 </p> </li> </ul> <ul> <li> <p> </p> <p> SparkFun Qwiic Air Quality PM1/PM2.5/PM10 Sensor - BMV080    SEN-26554 </p> </li> </ul> <ul> <li> <p> </p> <p> Flexible Qwiic Cable - 200mm    PRT-17258 </p> </li> </ul>"},{"location":"single_page/#other-microcontrollers","title":"Other Microcontrollers","text":"<p>We recommend using any board with an ESP32 (such as the ESP32-WROOM, ESP32-S2, and ESP32-S3). We'll be using the RedBoard IoT RedBoard - ESP32 Development Board for the examples in this tutorial.</p> <ul> <li> <p> </p> <p> SparkFun IoT RedBoard - ESP32 Development Board    WRL-19177 </p> </li> </ul> <ul> <li> <p> </p> <p> SparkFun Thing Plus - ESP32 WROOM (USB-C)    WRL-20168 </p> </li> </ul> <ul> <li> <p> </p> <p> SparkFun Thing Plus - ESP32-S2 WROOM    WRL-17743 </p> </li> </ul> <ul> <li> <p> </p> <p> SparkFun Thing Plus - ESP32-S3    WRL-24408 </p> </li> </ul>"},{"location":"single_page/#qwiic-accessories","title":"Qwiic Accessories","text":"<p>For those that want to take advantage of the Qwiic connector, you'll want to grab a Qwiic cable. Besides the one listed earlier, there are a variety of other cable lengths available in the SparkFun catalog to choose from.</p> <ul> <li> <p> </p> <p> SparkFun Qwiic Cable Kit    KIT-15081 </p> </li> </ul> <ul> <li> <p> </p> <p> Qwiic Cable - 100mm    PRT-14427 </p> </li> </ul> <ul> <li> <p> </p> <p> Qwiic Cable - 500mm    PRT-14429 </p> </li> </ul> <ul> <li> <p> </p> <p> Qwiic Cable - Breadboard Jumper (4-pin)    PRT-14425 </p> </li> </ul> <p>You'll also want a Qwiic MultiPort when daisy chaining more than one BMV080 or adding additional Qwiic-enabled devices. Adding displays will allow you to view the amount of particulate mater in the air.</p> <ul> <li> <p> </p> <p> SparkFun Qwiic MultiPort    BOB-18012 </p> </li> </ul> <ul> <li> <p> </p> <p> SparkFun Qwiic Alphanumeric Display - Red    COM-16916 </p> </li> </ul> <ul> <li> <p> </p> <p> SparkFun Qwiic OLED - (1.3in., 128x64)    LCD-23453 </p> </li> </ul>"},{"location":"single_page/#tools-optional","title":"Tools (Optional)","text":"<p>Note</p> <p>When soldering directly to the PTHs, you will need to be careful of the 3D printed enclosure! You will want to carefully remove the board from the enclosure before soldering.</p> <p>You will need a soldering iron, solder, and general soldering accessories for a secure connection when using the plated through holes.</p> <ul> <li> <p> </p> <p> Soldering Iron - 60W (Adjustable Temperature)    TOL-14456 </p> </li> </ul> <ul> <li> <p> </p> <p> Solder Lead Free - 15-gram Tube    TOL-09163 </p> </li> </ul> <ul> <li> <p> </p> <p> Hook-Up Wire - Assortment (Stranded, 22 AWG)    PRT-11375 </p> </li> </ul> <ul> <li> <p> </p> <p> Wire Strippers - 30AWG (Hakko)    TOL-12630 </p> </li> </ul> <ul> <li> <p> </p> <p> Flush Cutters - Hakko    TOL-11952 </p> </li> </ul> <ul> <li> <p> </p> <p> Hobby Knife    TOL-09200 </p> </li> </ul> <p>For users that are using the BMV080 in SPI mode or mounting the enclosure, make sure to grab the iFixit Moray Driver Kit. A precision flathead with 0.1mm tip is needed to remove the sensor from the enclosure. We also recommend using Phillips screwdriver with #0 tip and 4-40 standoffs when mounting the enclosure.</p> <ul> <li> <p> </p> <p> iFixit Moray Driver Kit    TOL-14456 </p> </li> </ul> <ul> <li> <p> </p> <p> Standoff - Nylon (4-40; 3/8\"; 10 pack)    TOL-14456 </p> </li> </ul> <ul> <li> <p> </p> <p> Screw - Phillips Head (1/4\", 4-40, 10 pack)    PRT-14456 </p> </li> </ul>"},{"location":"single_page/#prototyping-accessories-optional","title":"Prototyping Accessories (Optional)","text":"<p>Note</p> <p>Due to the size of the 3D printed enclosure, you will not be able to place the sensor on a breadboard. We recommend using M/F jumper wires should you decide to solder male header pins on the sensor. Of course, when soldering the sensor to a protoboard, you could solder to the other side of the protoboard to access the pins.</p> <p>Depending on your setup, you may want to use IC hooks for a temporary connection when the sensor is removed from enclosure. However, you will want to solder header pins to connect devices to the plated through holes for a secure connection. We opted for straight male headers for the SparkFun Qwiic Air Quality PM1/PM2.5/PM10 Sensor - BMV080 as well as M/F jumpers to connect to the RedBoard IoT Development Board to reduce the amount of soldering.</p> <ul> <li> <p> </p> <p> IC Hook with Pigtail    CAB-09741 </p> </li> </ul> <ul> <li> <p> </p> <p> Break Away Headers - Straight    PRT-00116 </p> </li> </ul> <ul> <li> <p> </p> <p> Jumper Wires Premium 6\" M/F Pack of 10    PRT-09140 </p> </li> </ul>"},{"location":"single_page/#suggested-reading","title":"Suggested Reading","text":"<p>If you aren't familiar with the Qwiic Connection System, we recommend reading here for an overview.</p> Qwiic Connection System <p>If you aren\u2019t familiar with the following concepts, we also recommend checking out a few of these tutorials before continuing.</p> <ul> <li> <p> </p> <p> Installing Arduino IDE </p> </li> </ul> <ul> <li> <p> </p> <p> Installing Board Definitions in the Arduino IDE </p> </li> </ul> <ul> <li> <p> </p> <p> IoT RedBoard ESP32 Development Board Hookup Guide </p> </li> </ul> <ul> <li> <p> </p> <p> How to Install CH340 Drivers </p> </li> </ul> <ul> <li> <p> </p> <p> I2C </p> </li> </ul> <ul> <li> <p> </p> <p> Serial Peripheral Interface (SPI) </p> </li> </ul> <ul> <li> <p> </p> <p> Logic Levels </p> </li> </ul>"},{"location":"single_page/#hardware-overview","title":"Hardware Overview","text":"<p>In this section, we will highlight the hardware and pins that are broken out on the SparkFun Qwiic Air Quality PM1/PM2.5/PM10 Sensor - BMV080. For more information, check out our Resources and Going Further on the components used for the sensor.</p> Top View Bottom View"},{"location":"single_page/#bmv080","title":"BMV080","text":"<p>The breakout board comes with Bosch's BMV080 populated and takes advantage of its flexible cable with the FPC 13-pin 0.33mm connector. The sensor is an ultra-small, fan-less air quality sensor for sensing PM1, PM2.5, and PM10 concentrations. A special lens allows the laser to pass through the enclosure to take measurements.</p> BMV080 <p>Note</p> <p>This is a CLASS 1 LASER PRODUCT CLASSIFIED IEC 60825-1 2014.</p>"},{"location":"single_page/#power","title":"Power","text":"<p>To power the board, you will need 3.3V. You can connect a Qwiic cable to the Qwiic connector. Or you could solder directly to the PTHs. Below are the power pins that are broken out on the edge of the board.</p> <ul> <li>3V3 \u2014 This pin is the voltage input for the board. The recommended input voltage for this pin is 3.3V.</li> <li>GND \u2014 Of course, is the common, ground voltage (0V reference) for the system.</li> </ul> Power and Ground Highlighted - Top View Power, Ground, and Qwiic Connector Highlighted - Bottom View"},{"location":"single_page/#qwiic-and-i2c","title":"Qwiic and I<sup>2</sup>C","text":"<p>By default, the communication interface is set to I<sup>2</sup>C with the MODE jumper. The board includes one horizontal Qwiic connector to connect to other Qwiic-enabled I<sup>2</sup>C devices. However, the board still breaks out 0.1\"-spaced pins for users who prefer a soldered connection.</p> <ul> <li>SCL/SCK \u2014 On the top side, the pin is labeled as SCL. On the bottom side, the pin is labeled as SCK. Thus the pin is used for the I<sup>2</sup>C clock.</li> <li>SDA/PICO \u2014 On the top side, the pin is labeled as SDA. On the bottom side, the pin is labeled as PICO. Thus the pin is used for the I<sup>2</sup>C data.</li> </ul> Qwiic Connector and I<sup>2</sup>C Highlighted - Top View I<sup>2</sup>C Highlighted - Bottom View <p>The default address of the BMV080 is set to 0x57 by default. By configuring AB1 and AB0 jumpers, you can adjust the I<sup>2</sup>C address to an alternative address. For more information, check below under the jumpers.</p>"},{"location":"single_page/#interrupt-pin","title":"Interrupt Pin","text":"<p>The board includes an interrupt pin when the board is set to I<sup>2</sup>C mode.</p> <ul> <li>IRQ \u2014 Short for interrupt. This pin sends an interrupt signal to a microcontroller.</li> </ul> Interrupt Pin Highlighted - Top View Interrupt Pin Highlighted - Bottom View <p>Note</p> <p>The hardware interrupt of the BMV080 sensor unit cannot be used as trigger in duty cycling mode.</p>"},{"location":"single_page/#spi","title":"SPI","text":"<p>The BMV080 can also be set to SPI as the communication interface by adjusting the MODE jumper on the back.</p> <ul> <li>PICO/SDA \u2014 On the bottom side, the pin is labeled as PICO (i.e. Peripheral In, Controller Out). On the top side, the pin is labeled as SDA.</li> <li>POCI/AB0 \u2014 On the bottom side, the pin is labeled as POCI (i.e. Peripheral Out, Controller In). On the top side, the pin is labeled as AB0. When set to SPI mode, make sure to leave AB0 (POCI) open!</li> <li>SCK/SCL \u2014 On the bottom side, the pin is labeled as SCK for the clock. On the tip side, the pin is labeled as SCL.</li> <li>CS \u2014 On the bottom side, the pin is labeled as CS (i.e. chip select). On the top side, the pin is labeled as AB1. This pin is active low. When set to SPI mode, make sure to leave AB1 (CS) open!</li> </ul> SPI Pins Highlighted - Top View SPI Pins Highlighted - Bottom View"},{"location":"single_page/#jumpers","title":"Jumpers","text":"<p>Note</p> <p>If this is your first time working with jumpers, check out the How to Work with Jumper Pads and PCB Traces tutorial for more information.</p> <p>The back of the board includes jumpers to configure the board.</p> <ul> <li>I<sup>2</sup>C \u2014 By default, this three-pad jumper is closed. The three way jumper labeled I<sup>2</sup>C connects 3.3V to two 2.2k\u03a9 pull-up resistors and to the I<sup>2</sup>C data and clock lines. If multiple devices are connected to the bus with the pull-up resistors enabled, the parallel equivalent resistance will create too strong of a pull-up for the bus to operate correctly. As a general rule of thumb, disable all but one pair of pull-up resistors if multiple devices are connected to the bus.</li> <li>AB0 \u2014 Address jumper 0 when the BMV080 is set to I<sup>2</sup>C mode. This is a multifunctional pin. This is also connected to POCI. By default, the three-pad jumper's center pad is connected to the <code>1</code> side</li> <li>AB1 \u2014 Address jumper 1 when the BMV080 is set to I<sup>2</sup>C mode. This is a multifunctional pin. This is also connected to CS. By default, the three-pad jumper's center pad is connected to the <code>1</code> side</li> <li>MODE \u2014 By default, this three-pad jumper is closed between the center pad and the pad labeled as I2C. Thus, the communication interface is set to I<sup>2</sup>C. Cutting this trace and adding solder between the center pad and the pad labeled as SPI will configure the communication interface as SPI.</li> </ul> Jumpers Highlighted - Bottom View <p>When the SparkFun Qwiic Air Quality Sensor is configured in I2C mode, users have the ability to configure the default address using AB0 and AB1 jumpers. The following table shows the possible I<sup>2</sup>C address based on the jumper configuration.</p> AB1              AB0              I<sup>2</sup>C Address              0              0              0x54              0              1              0x55              1              0              0x56              1              1              0x57 (default) <p>Note</p> <p>AB0 is a multifunctional pin! When the SparkFun Qwiic Air Quality Sensor is configured for SPI, make sure to leave AB0 (POCI) open!</p>"},{"location":"single_page/#3d-model","title":"3D Model","text":"<p>A 3D model of the board and components was exported to a STEP file using KiCad.</p> <p> </p> Click Here for the STEP File"},{"location":"single_page/#board-dimensions","title":"Board Dimensions","text":"<p>The board is 0.5\" x 0.95\" (12.70mm x 24.13mm). To make the board as small as possible, there are no mounting holes.</p> Board Dimensions"},{"location":"single_page/#hardware-hookup","title":"Hardware Hookup","text":""},{"location":"single_page/#connecting-via-qwiic","title":"Connecting via Qwiic","text":"<p>By default, the sensor can be read through I<sup>2</sup>C. Insert a Qwiic cable between the SparkFun Qwiic Air Quality Sensor and your microcontroller. Then connect a compatible USB cable between the microcontroller and your computer's USB port.</p> Qwiic Cable, Air Quality Sensor, ESP32 IoT RedBoard, and USB Cable Connected <p>For users looking to display the current air quality readings in real time without a computer, we recommend getting an additional Qwiic cable and OLED display. The example in this tutorial uses the Qwiic OLED Display (1.3in., 128x64).</p> Qwiic Cables, Air Quality Sensor, Qwiic OLED, ESP32 IoT RedBoard, and USB Cable Connected"},{"location":"single_page/#removing-the-bmv080-from-the-enclosure","title":"Removing the BMV080 from the enclosure","text":"<p>For users that need to remove the BMV080 when soldering to the PTHs, you will need to remove the board from the enclosure. You may also want to remove sensor from the enclsoure when modifying the jumpers as well to avoid damaging the material when cutting or soldering the jumper pads. This section will go over how to remove the sensor from the enclosure.</p> <pre><code>insert here\n\n\n\nparts spread out on table\n</code></pre> <p>Using a precision flathead with 0.1mm tip, slide the flathead in the slot and under the tab. Rock the precision flathead's handle toward the mounting hole so that the tab pops out.</p> <pre><code>insert here\n\n\n\n\nflathead under tab and popping out the inner shell\n</code></pre> <p>There is a rubber O-ring and lens between enclosure's inner and outer shell. You will want to carefully remove the inner shell holding the BMV080 over a clean, flat surface to avoid losing the small parts.</p> <pre><code>insert here\n\n\n\n\ncarefully removing inner shell showing the o-ring and lens\n</code></pre> <p>Slide the sensor out from the inner shell's slot. At this point, you should be able to solder male header pins from the top side so that you can access the longer mating pins from the bottom side. Depending on your preference, you can also solder jumper wires to the PTHs as well depending on your setup. Carefully clean the solder joints to remove any flux residue left on the board using isopropyl alcohol and a precision Q-tip.</p> <p>Note</p> <p>When soldering make sure to not add too much solder. This may prevent your from being able to slide the breakout board back into the inner shell. For users soldering header pins, ensure that the header's plastic spacer is flush against the breakout board and not at an angle. For users soldering wire, ensure that the stripped wire is short.</p>"},{"location":"single_page/#reassembling-the-enclosure","title":"Reassembling the Enclosure","text":"<p>Now that we are done modifying the breakout board, it is time to place the sensor back in the enclosure! This section will go over how to reassemble the parts.</p> <pre><code>insert here\n\n\n\n\nsensor back in enclosure\n</code></pre> <p>Slide the BMV080's breakout board into the inner shell so that the sensor aligns with the hole and the Qwiic connector aligns with the slot on the side of the inner shell's enclosure.</p> <pre><code>insert here\n\n\n\n\nslide the BMV080 with headers back into the inner shell\n</code></pre> <p>Turn the board over on a clean, flat surface. Using tweezers, place the lens over the hole where the BMV080's sensor is located. Then place the o-ring over lens. Ensure that the parts are in their respective square and circular slots.</p> <pre><code>insert here\n\n\n\n\ninner shell facing away from table with lens and o-ring placed on top\n</code></pre> <p>With the outer shell, align the hole for the lens and the slot for the Qwiic connector. Slide the outer shell in over the inner shell.</p> <pre><code>insert here\n\n\n\nouter shell over the inner shell\n</code></pre> <p>Push down until you hear the tabs pop in.</p> <pre><code>insert here\n\n\n\npush down on outer shell until the tabs pop in\n</code></pre>"},{"location":"single_page/#connecting-via-pth","title":"Connecting via PTH","text":"<p>Note</p> <p>When soldering directly to the PTHs, you will need to be careful of the 3D printed enclosure! You will want to carefully remove the board from the enclosure when soldering.</p> <p>For temporary connections to the PTHs, you could use IC hooks to test out the pins. However, you'll need to solder headers or wires of your choice to the board for a secure connection. You can choose between a combination of header pins and jumper wires, or stripping wire and soldering the wire directly to the board.</p> <ul> <li> <p> </p> <p> How to Solder: Through Hole Soldering </p> </li> </ul> <ul> <li> <p> </p> <p> Working with Wire </p> </li> </ul>"},{"location":"single_page/#interrupt","title":"Interrupt","text":"<p>The following table shows the connection that is required between an ESP32 and the SparkFUn Qwiic Air Quality Sensor when using I<sup>2</sup>C as the communication interface with interrupts.</p> ESP32 Pinout(i.e. IoT RedBoard - ESP32, ESP32 Thing Plus C, etc.)              SparkFun Qwiic Air Quality SensorBMV080              GND GND 3.3V 3V3 SDA SDA (PICO) SCL SCL (SCK) 14 IRQ"},{"location":"single_page/#spi_1","title":"SPI","text":"<p>The following tables shows the connection that is required between between an ESP32 and the SparkFun Qwiic Air Quality Sensor when using SPI as the communication interface. You will need to cut the MODE jumper between the center pad and the pad labeled as I2C. Then add solder between the center pad and the pad labeled as SPI. Make sure to also leave the AB0 jumper open (i.e. both sides of the jumper are not connected).</p> ESP32 Pinout(i.e. IoT RedBoard - ESP32, ESP32 Thing Plus C, etc.)              SparkFun Qwiic Air Quality SensorBMV080              GND GND 3.3V 3V3 PICO PICO (SDA) POCI POCI (AB0) SCK SCK (SCL) CS CS (AB1)"},{"location":"single_page/#setting-up-arduino","title":"Setting Up Arduino","text":"<p>Arduino</p> <p>This example assumes you are using the latest version of the Arduino IDE on your desktop. If this is your first time using Arduino IDE, library, or board add-on, please review the following tutorials.</p> <ul> <li>Installing the Arduino IDE</li> <li>Installing an Arduino Library</li> <li>Installing Board Definitions in the Arduino IDE</li> </ul> <p>Note</p> <p>If you've never connected an CH340 device to your computer before, you may need to install drivers for the USB-to-serial converter. Check out our section on \"How to Install CH340 Drivers\" for help with the installation.</p> <ul> <li>How to Install CH340 Drivers</li> </ul> <p>SparkFun has written a library using Bosch's API to work with the BMV080! You can obtain this library through the Arduino Library Manager by searching for \"SparkFun BMV080\". Find the one written by SparkFun Electronics and install the latest version. Users who prefer to manually install the library can get it from the GitHub Repository or download the .ZIP by clicking the button below:</p> SparkFun BMV080 Arduino Library (ZIP) <p>Note</p> <p>The SparkFun BMV080 Arduino Library uses the SparkFun Toolkit as a dependency. This should automatically download when installing the library using the Arduino Library Manager. For users that are installing the BMV080 library manually, make sure to download the SparkFun Toolkit as well. At the time of writing, we were using the following Arduino Libraries, firmware binaries, board add-ons.</p> <ul> <li>Arduino Libraries<ul> <li>SparkFun BMV080 Arduino Library v???</li> <li>SparkFun Toolkit v???</li> </ul> </li> <li>Board Definitions<ul> <li>esp32 by Espressif v3.0.1 for the IoT RedBoard - ESP32.</li> </ul> </li> </ul> <p>Now that we have our library and board add-on installed, we can start experimenting with the breakout board. For the scope of this tutorial, we will highlight the examples to get started. From there we will be able to build our own custom code to integrate the development board into a project.</p>"},{"location":"single_page/#arduino-example-1-basic-readings","title":"Arduino Example 1 \u2014 Basic Readings","text":"<p>This example shows how to read the BMV080 via Qwiic when the sensor is configured in continuous mode. The output will show the amount of particulate matter that is detected.</p> <p>Head to the example 1 from the Arduino IDE's menu (located in File Examples &gt; SparkFun BMV080 Arduino Library &gt; Example_01_BasicReadings).</p> <p>If you have not already, select your Board (in this case the SparkFun ESP32 IoT RedBoard), and associated COM port. Upload the code to the board and set the Arduino Serial Monitor to 115200 baud. The Arduino should begin outputting the sensor readings. If the air in front of the sensor is void of particulate matter, you should see <code>0.00</code> for each size.</p> <p>Try placing a scented candle or spray some air freshener across the sensor. You should see the sensor readings jump up depending on the PM size.</p> <p>When the sensor detects an object in front of the it, the output will indicate that the sensor is <code>obstructed</code>.\"</p>"},{"location":"single_page/#arduino-example-2-duty-cycle","title":"Arduino Example 2 \u2014 Duty Cycle","text":"<p>This example shows how to read the BMV080 via Qwiic when the sensor is configured in duty cycle mode. Similar to the first example, the output will show the amount of particulate matter that is detected. However, it will show the readings every 20 seconds.</p> <p>Head to the example 2 from the Arduino IDE's menu (located in File Examples &gt; SparkFun BMV080 Arduino Library &gt; Example_02_DutyCycle).</p> <p>If you have not already, select your Board (in this case the SparkFun ESP32 IoT RedBoard), and associated COM port. Upload the code to the board and set the Arduino Serial Monitor to 115200 baud. The Arduino should begin outputting the sensor readings every 20 seconds.</p>"},{"location":"single_page/#arduino-example-3-interrupt","title":"Arduino Example 3 \u2014 Interrupt","text":"<p>Note</p> <p>The interrupt example cannot be used when the BMV080 is in duty cycling mode.</p> <p>This example shows how to read the BMV080 via Qwiic when the sensor is configured in continuous mode with a hardware interrupt. Similar to the first example, the output will show the amount of particulate matter that is detected. However, the sensor will trigger a hardware interrupt.</p> <p>Head to the example 3 from the Arduino IDE's menu (located in File Examples &gt; SparkFun BMV080 Arduino Library &gt; Example_03_Interrupt).</p> <p>If you have not already, select your Board (in this case the SparkFun ESP32 IoT RedBoard), and associated COM port. Upload the code to the board and set the Arduino Serial Monitor to 115200 baud. The Arduino should begin outputting the sensor readings every 20 seconds.</p> <p>Tip</p> <p>You can view the timestamp of each sensor readings in the Arduino Serial Monitor by clicking on the \"Toggle Timestamp\" button. This button is represented as a clock above the baud rate.</p>"},{"location":"single_page/#arduino-example-4-spi","title":"Arduino Example 4 \u2014 SPI","text":"<p>Note</p> <p>Make sure to configure the board for SPI mode by adjusting the jumpers on the back of the board. You will also need to solder headers to the board and wire to your Arduino's SPI port.</p> <p>This example shows how to read the BMV080 via SPI when the sensor is configured to continuous mode.</p> <p>Head to the example 4 from the Arduino IDE's menu (located in File Examples &gt; SparkFun BMV080 Arduino Library &gt; Example_04_SPI).</p> <p>If you have not already, select your Board (in this case the SparkFun ESP32 IoT RedBoard), and associated COM port. Upload the code to the board and set the Arduino Serial Monitor to 115200 baud. The Arduino should begin outputting the sensor readings.</p>"},{"location":"single_page/#arduino-example-5-parameters","title":"Arduino Example 5 \u2014 Parameters","text":"<p>This example shows how to read and set the parameters of the BMV080 via Qwiic. These include <code>volumetric_mass_density</code>, <code>integration_time</code>, <code>distribution_id</code>, <code>do_obstruction_detection</code>, <code>do_vibration_filtering</code>, and  <code>measurement_algorithm</code>. Once these parameters are read and set, this example will then configure the sensor in continuous mode to read particulate mater every second.</p> <p>Head to the example 5 from the Arduino IDE's menu (located in File Examples &gt; SparkFun BMV080 Arduino Library &gt; Example_05_Parameters).</p> <p>If you have not already, select your Board (in this case the SparkFun ESP32 IoT RedBoard), and associated COM port. Upload the code to the board and set the Arduino Serial Monitor to 115200 baud. The Arduino should output the paraemters before outputting the sensor readings every second.</p> <p>Note</p> <p>If you do not see the parameters after uploading, you may not have opened the Arduino Serial Monitor when the Arduino output the parameters. Try restarting your Arduino by hitting the reset button.</p>"},{"location":"single_page/#arduino-example-6-two-sensors","title":"Arduino Example 6 \u2014 Two Sensors","text":"<p>Note</p> <p>Make sure to have one sensor using the alternate I<sup>2</sup>C address. In this case, the second BMV080 had AB0 jumper changed to <code>0</code>.</p> <p>This example shows how to read two BMV080 via Qwiic when each sensor is configured in continuous mode. The output will show the amount of particulate matter that is detected from both sensors.</p> <p>Head to the example 6 from the Arduino IDE's menu (located in File Examples &gt; SparkFun BMV080 Arduino Library &gt; Example_06_TwoSensors).</p> <p>If you have not already, select your Board (in this case the SparkFun ESP32 IoT RedBoard), and associated COM port. Upload the code to the board and set the Arduino Serial Monitor to 115200 baud. The Arduino should begin outputting the sensor readings from both BMV080s.</p>"},{"location":"single_page/#arduino-example-7-qwiic-alphanumeric-display","title":"Arduino Example 7 \u2014 Qwiic Alphanumeric Display","text":"<p>This example shows how to read the BMV080 via Qwiic when the sensor is configured in duty cycle mode. The output to the Qwiic Alphanumeric display will show the amount of particulate matter that is detected.</p> <p>Head to the example 7 from the Arduino IDE's menu (located in File Examples &gt; SparkFun BMV080 Arduino Library &gt; Example_07_Demo_Alphanumeric).</p> <p>If you have not already, select your Board (in this case the SparkFun ESP32 IoT RedBoard), and associated COM port. Upload the code to the board and set the Arduino Serial Monitor to 115200 baud. The Arduino should begin outputting the sensor readings through the Arduino Serial Monitor and the Qwiic Alphanumeric display. For simplicity, we will only display PM2.5.</p>"},{"location":"single_page/#arduino-example-8-qwiic-oled-13-128x64","title":"Arduino Example 8 \u2014 Qwiic OLED (1.3\", 128x64)","text":"<p>This example shows how to read the BMV080 via Qwiic when the sensor is configured in duty cycle mode. The output to the Qwiic OLED Display (specifically the 1.3\", 128x64) will show the amount of particulate matter that is detected.</p> <p>Head to the example 8 from the Arduino IDE's menu (located in File Examples &gt; SparkFun BMV080 Arduino Library &gt; Example_08_Demo_OLED).</p> <p>If you have not already, select your Board (in this case the SparkFun ESP32 IoT RedBoard), and associated COM port. Upload the code to the board and set the Arduino Serial Monitor to 115200 baud. The Arduino should begin outputting the sensor readings through the Arduino Serial Monitor and the Qwiic OLED Display (1.3\", 128x64).</p>"},{"location":"single_page/#troubleshooting","title":"Troubleshooting","text":""},{"location":"single_page/#general-troubleshooting-help","title":"General Troubleshooting Help","text":"<p>Note</p> <p>  Not working as expected and need help?  </p> <p>If you need technical assistance and more information on a product that is not working as you expected, we recommend heading on over to the SparkFun Technical Assistance page for some initial troubleshooting. </p> <p>SparkFun Technical Assistance Page</p> <p>If you don't find what you need there, the SparkFun Forums are a great place to find and ask for help. If this is your first visit, you'll need to create a forum account to search product forums and post questions.</p> <p>Log Into SparkFun Forums</p>"},{"location":"single_page/#resources","title":"Resources","text":"<p>Now that you've successfully got your SparkFun Qwiic Mini Particulate Matter Sensor Breakout - BMV080 up and running, it's time to incorporate it into your own project! For more information, check out the resources below:</p> <ul> <li>Schematic (PDF)</li> <li>KiCad Files (ZIP)</li> <li>Board Dimensions (PNG)</li> <li>3D Model<ul> <li>Breakout Board (STEP)</li> <li>[Enclosure](</li> </ul> </li> <li>Component Datasheets<ul> <li>[BMV080](</li> </ul> </li> <li>Arduino Library<ul> <li>SparkFun BMV080</li> <li>SparkFun Toolkit</li> </ul> </li> <li>GitHub Hardware Repo</li> </ul>"},{"location":"troubleshooting/","title":"Troubleshooting","text":""},{"location":"troubleshooting/#general-troubleshooting-help","title":"General Troubleshooting Help","text":"<p>Note</p> <p>  Not working as expected and need help?  </p> <p>If you need technical assistance and more information on a product that is not working as you expected, we recommend heading on over to the SparkFun Technical Assistance page for some initial troubleshooting. </p> <p>SparkFun Technical Assistance Page</p> <p>If you don't find what you need there, the SparkFun Forums are a great place to find and ask for help. If this is your first visit, you'll need to create a forum account to search product forums and post questions.</p> <p>Log Into SparkFun Forums</p>"},{"location":"assets/component_documentation/","title":"SparkFun Documentation","text":"<p>This directory should include any necessary datasheets, example number crunching, etc. </p>"},{"location":"github/contribute/","title":"Contribute: Help Fix our Mistake!","text":"<p>Spot something wrong? Feel free to contribute our open-source design and documentation. </p>"},{"location":"github/contribute/#improve-our-documentation","title":"Improve our Documentation","text":"<p>All of this documentation can be modified by you! Please help us make it better.</p> <ul> <li>These pages are contained in the <code>docs</code> folder of the SparkFun Qwiic Air Quality PM1/PM2.5/PM10 Sensor - BMV080 repository.</li> </ul>"},{"location":"github/contribute/#submit-a-correction","title":"Submit a Correction","text":"<ol> <li>Fork this repo</li> <li>Add your corrections or improvements to the markdown file</li> <li>File a pull request with your changes, and enjoy making the words worlds world a better place.<ul> <li>Once received, the documentation specialist will automatically be notified.</li> <li>We will review your suggested improvements to make sure they are correct and fit within our documentation standards.</li> </ul> </li> </ol>"},{"location":"github/contribute/#improve-our-hardware-design","title":"Improve our Hardware Design","text":"<p>All of our designs are open-source! Please help us make it better.</p> <ul> <li>Our board design files are contained in the <code>Hardware</code> folder of the SparkFun Qwiic Air Quality PM1/PM2.5/PM10 Sensor - BMV080 repository.</li> </ul>"},{"location":"github/contribute/#submit-a-design-improvement","title":"Submit a Design Improvement","text":"<ol> <li>Fork this repo</li> <li>Add your design improvements</li> <li>File a pull request with your changes, and enjoy making the words worlds world a better place.<ul> <li>Once received, the engineer in charge of the original design will automatically be notified.</li> <li>We will review your suggested improvements, if they are within our board design standards and meet our product design requirements, we will flag these changes for our next board revision. (Please note, that even if your suggestion is accepted, these changes may not be immediate. We may have to cycle through our current product inventory first.)</li> </ul> </li> </ol>"},{"location":"github/contribute/#contributors","title":"Contributors","text":"<p>Let's provided some recognition to the contributors for this project!</p> <p> </p>"},{"location":"github/file_issue/","title":"Did we make a mistake?","text":"<p>Spot something wrong? Please let us know. </p> <p>Attention</p> <p>This is not where customers should seek assistance on a product. If you require technical assistance or have questions about a product that is not working as expected, please head over to the SparkFun Technical Assistance page for some initial troubleshooting.  SparkFun Technical Assistance Page </p> <p>If you can't find what you need there, you'll need a Forum Account to search product forums and post questions.</p>"},{"location":"github/file_issue/#discrepancies-in-the-documentation","title":"Discrepancies in the Documentation","text":"<p>All of this documentation can be modified by you! Please help us make it better.</p> <ul> <li>The documentation files for these pages are contained in the <code>docs</code> folder of the SparkFun Qwiic Air Quality PM1/PM2.5/PM10 Sensor - BMV080 repository.</li> </ul>"},{"location":"github/file_issue/#spot-something-wrong","title":"Spot something wrong?","text":"<p>If a section of the documentation is incorrect, please open an issue and let us know.</p>"},{"location":"github/file_issue/#do-you-have-a-suggested-correction","title":"Do you have a suggested correction?","text":"<ol> <li>With a GitHub account, fork this repo</li> <li>Add your correction(s) or improvement(s) to the markdown file(s)</li> <li>File a pull request with your changes, and enjoy making the words worlds world a better place.<ul> <li>Once received, the documentation specialist will automatically be notified.</li> <li>We will review your suggested improvement(s) to make sure they are correct and fit within our documentation standards.</li> </ul> </li> </ol>"},{"location":"github/file_issue/#problems-in-the-hardware-design","title":"Problems in the Hardware Design","text":"<p>All of our designs are open-source! Please help us make it better.</p> <ul> <li>Our board design files are contained in the <code>Hardware</code> folder of the SparkFun Qwiic Air Quality PM1/PM2.5/PM10 Sensor - BMV080 repository.</li> </ul>"},{"location":"github/file_issue/#does-something-not-make-sense","title":"Does something not make sense?","text":"<p>If part of the design is confusing, please open an issue and let us know.</p>"},{"location":"github/file_issue/#did-we-forget-to-include-an-important-function-of-the-board","title":"Did we forget to include an important function of the board?","text":"<ul> <li>Please keep in mind that we may intentionally exclude certain functions of the board to meet our product design requirements. (For example, our Qwiic Micro boards are intended to fit on a small board layout and only use I<sup>2</sup>C communication; therefore, we may not have the SPI and interrupt pins available for users.)</li> <li>If part of the board's functionality is missing, please open an issue and file a feature request.</li> </ul>"},{"location":"github/file_issue/#do-you-wish-to-contribute-directly-to-improving-the-board-design","title":"Do you wish to contribute directly to improving the board design?","text":"<ol> <li>With a GitHub account, Fork this repo</li> <li>Add your design improvement(s)</li> <li>File a pull request with your changes, and enjoy making the words worlds world a better place.<ul> <li>Once received, the engineer in charge of the original design will automatically be notified.</li> <li>We will review your suggested improvement(s), if they are within our board design standards and meet our product design requirements, we will flag these changes for our next board revision. (Please note, that even if your suggestion is accepted, these changes may not be immediate. We may have to cycle through our current product inventory first.)</li> </ul> </li> </ol>"},{"location":"javascript/","title":"javascript directory","text":"<p>This folder should contain the files for the custom javascript that is enabled in the product documentation</p>"}]}